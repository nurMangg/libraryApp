/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package library;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mangg
 */
public class Perpustakaan extends javax.swing.JFrame {
    
    /**
     * Creates new form Perpustakaan
     */
    public Perpustakaan() {
        initComponents();
        TampilData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        btnLog = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelBuku = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jumlahData = new javax.swing.JLabel();
        message = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("APLIKASI PENGOLAHAN BUKU PERPUSTAKAAN");

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 150));

        jLabel2.setFont(new java.awt.Font("Noto Sans", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DATA BUKU");

        btnTambah.setText("TAMBAH");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnEdit.setText("EDIT");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnHapus.setText("HAPUS");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCariKeyPressed(evt);
            }
        });

        btnLog.setText("LOG AKTIVITAS");
        btnLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 322, Short.MAX_VALUE)
                .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLog, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnLog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        tabelBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelBuku);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setPreferredSize(new java.awt.Dimension(765, 35));

        message.setFont(new java.awt.Font("Noto Sans Math", 2, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 316, Short.MAX_VALUE)
                .addComponent(jumlahData, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jumlahData, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        tambahBukuu tbhBuku = new tambahBukuu(this,true);
        tbhBuku.setVisible(true);
        
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
//        int barisEdit = -1;
//        int barisEdit = tabelBuku.getSelectedRow();
//        System.out.println(barisEdit);
        int baris = tabelBuku.getSelectedRow();
        
        if (baris >= 0) {
            editBuku edtBukuu = new editBuku(this, true);
        
            
            String nama = (String) tabelBuku.getValueAt(baris, 1);
            edtBukuu.editBuku.setText(nama);
        
            String id_buku = (String) tabelBuku.getValueAt(baris, 0);
            edtBukuu.idQu = id_buku;


            String jenis = (String) tabelBuku.getValueAt(baris, 2);
            edtBukuu.editJenis.setSelectedItem(jenis);

            String penerbit = (String) tabelBuku.getValueAt(baris, 3);
            edtBukuu.editPenerbit.setText(penerbit);       

            edtBukuu.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Pilih Data Terlebih Dahulu");
        }

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        
        int barisDel = tabelBuku.getSelectedRow();

        if (barisDel >= 0) {
            String id_bukuDel = (String) tabelBuku.getValueAt(barisDel, 0);

            try {
                Connection c = koneksi.sambungKeDB();
                Statement st = c.createStatement();
                String sql = "DELETE FROM detail_peminjaman WHERE buku_id_buku = '"+id_bukuDel+"';";
                String sql1 = "DELETE FROM buku WHERE id_buku = '"+id_bukuDel+"';";
                    int konfirmasi = JOptionPane.showConfirmDialog(this, "Yakin Untuk Menghapus Data?","Konfirmasi",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                    if (konfirmasi == JOptionPane.YES_OPTION) {
                        st.executeUpdate(sql);
                        st.executeUpdate(sql1);                    
                        Perpustakaan.TampilData();
                        JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                    }               

            } catch (Exception e) {
                System.err.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Data Terlebih Dahulu!");
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariActionPerformed

    private void txtCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyPressed
        // TODO add your handling code here:
        String key = txtCari.getText();
        cariData(key);
    }//GEN-LAST:event_txtCariKeyPressed

    private void btnLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogActionPerformed
        // TODO add your handling code here:
        log_aktivitas logAkt = new log_aktivitas(this, true);
        logAkt.setVisible(true);

    }//GEN-LAST:event_btnLogActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Perpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Perpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Perpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Perpustakaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Perpustakaan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnLog;
    private javax.swing.JButton btnTambah;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JSeparator jSeparator2;
    public static javax.swing.JLabel jumlahData;
    public static javax.swing.JLabel message;
    public static javax.swing.JTable tabelBuku;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables

    public static void TampilData() {
        Object[] kolom = {"ID BUKU", "NAMA BUKU", "JENIS BUKU", "PENERBIT", "TANGGAL MASUK", "TANGGAL UBAH"};

        DefaultTableModel model = new DefaultTableModel(null, kolom);
        tabelBuku.setModel(model);

        try {
            Connection c = koneksi.sambungKeDB();
            Statement st = c.createStatement();
            String sql = "SELECT * FROM buku ORDER BY tanggal_masuk";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                String id = rs.getString("id_buku");
                String tanggal = rs.getString("tanggal_masuk");
                String namabuku = rs.getString("nama_buku");
                String jenis = rs.getString("jenis");
                String penerbit = rs.getString("penerbit");
                String tanggal_u = rs.getString("tanggal_edit");
                
                Object[] data = {id, namabuku, jenis, penerbit, tanggal, tanggal_u};
                model.addRow(data);
    
            }
            
            message.setForeground(Color.green);
            message.setText("Sukses Memuat Data");
        } catch (Exception e) {
            
            //message.setText(e.getMessage());
            message.setForeground(Color.red);
            message.setText("Tidak Terhubung Ke Database");
        }
        
        int jumlah = model.getRowCount();
        jumlahData.setText("Record : "+jumlah);

    }
    
    
    private void cariData(String key) {
        Object[] kolom = {"ID BUKU", "NAMA BUKU", "JENIS BUKU", "PENERBIT", "TANGGAL MASUK", "TANGGAL UBAH"};

        DefaultTableModel model = new DefaultTableModel(null, kolom);
        tabelBuku.setModel(model);
        
        try {
            Connection c = koneksi.sambungKeDB();
            Statement st = c.createStatement();
            model.getDataVector().removeAllElements();
            String sql = "SELECT * FROM buku WHERE id_buku LIKE '%"+key+"%' OR tanggal_masuk LIKE '%"+key+"%' OR nama_buku LIKE '%"+key+"%' OR jenis LIKE '"+key+"%' OR penerbit LIKE '%"+key+"%'";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                String id = rs.getString("id_buku");
                String tanggal = rs.getString("tanggal_masuk");
                String namabuku = rs.getString("nama_buku");
                String jenis = rs.getString("jenis");
                String penerbit = rs.getString("penerbit");
                String tanggal_u = rs.getString("tanggal_edit");
                
                Object[] data = {id, namabuku, jenis, penerbit, tanggal, tanggal_u};
                model.addRow(data);
    
            }
            
            message.setForeground(Color.green);
            message.setText("Sukses Memuat Data");
        } catch (Exception e) {
            
            //message.setText(e.getMessage());
            message.setForeground(Color.red);
            message.setText("Tidak Terhubung Ke Database");
        }
        int jumlah = model.getRowCount();
        jumlahData.setText("Record : "+jumlah);
    }
}
